/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public\yaku.glb --t
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    face: THREE.Mesh
    face2: THREE.Mesh
    fullbody_yaku: THREE.Mesh
  }
  materials: {
    ['YAku_mouth.001']: THREE.MeshStandardMaterial
    ['Yaku_eye.001']: THREE.MeshStandardMaterial
    ['Yaku_body.001']: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/yaku.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
        <mesh geometry={nodes.face.geometry} material={materials['YAku_mouth.001']} />
        <mesh geometry={nodes.face2.geometry} material={materials['Yaku_eye.001']} />
        <mesh geometry={nodes.fullbody_yaku.geometry} material={materials['Yaku_body.001']} />
      </group>
    </group>
  )
}

useGLTF.preload('/yaku.glb')
